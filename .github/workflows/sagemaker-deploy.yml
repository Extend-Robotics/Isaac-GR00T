name: SageMaker Code Deploy & Build Training Image

on:
  release:
    types: [published]

jobs:
  upload-to-s3:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Archive
        run: |
          mkdir -p upload_dir
          cp -r gr00t upload_dir/
          cp scripts/gr00t_finetune.py upload_dir/
          tar -czf sourcedir.tar.gz -C upload_dir .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp sourcedir.tar.gz \
            s3://${{ vars.S3_BUCKET }}/${{ vars.MODEL_FOLDER }}/${{ github.event.release.tag_name }}/sourcedir.tar.gz

  start-gcp-runner:
    runs-on: ubuntu-latest
    needs: upload-to-s3
    if: ${{ success() }}
    name: Start GCP Self-Hosted Runner
    steps:
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Start GCP VM
        run: |
          echo "Starting GCP VM $VM_NAME..."
          gcloud compute instances start ${{ secrets.GCP_VM_NAME }} --zone=${{ secrets.GCP_VM_ZONE }}

      - name: Wait for GCP Runner to be Available
        run: |
          RUNNER_API="https://api.github.com/repos/${{ github.repository }}/actions/runners"
          TIMEOUT=300
          INTERVAL=10
          ELAPSED=0
          while [ $ELAPSED -lt $TIMEOUT ]; do
            RESP=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.ER_SETUP_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "$RUNNER_API")

            # safe get total_count (0 if missing) and then look for our runner
            COUNT=$(echo "$RESP" | jq '.total_count // 0')
            if [ "$COUNT" -gt 0 ] && echo "$RESP" \
                | jq -e '.runners[] | select(.name=="gcp-runner" and .status=="online")' \
                >& /dev/null; then
              echo "GCP runner is online"
              exit 0
            fi
            echo "Waiting for GCP runner to come online..."
            sleep $INTERVAL
            ELAPSED=$((ELAPSED + INTERVAL))
          done
          echo "Timeout waiting for GCP runner"
          exit 1

  build-and-push-sagemaker-image:
    runs-on: [self-hosted, Linux, X64]
    needs: start-gcp-runner
    if: ${{ success() }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.sagemaker
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY }}:${{ github.event.release.tag_name }}

  stop-gcp-runner:
      runs-on: ubuntu-latest
      name: Stop GCP Self-Hosted Runner
      needs: [start-gcp-runner, build-and-push-sagemaker-image]
      if: always()
      steps:
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Stop GCP VM
        run: |
          echo "Stopping GCP VM ${{ secrets.GCP_VM_NAME }}..."
          gcloud compute stop ${{ secrets.GCP_VM_NAME }} --zone=${{ secrets.GCP_VM_ZONE }}